diff --git a/moveit_ros/perception/CMakeLists.txt b/moveit_ros/perception/CMakeLists.txt
index 73f692e68..308a2df1e 100644
--- a/moveit_ros/perception/CMakeLists.txt
+++ b/moveit_ros/perception/CMakeLists.txt
@@ -22,6 +22,7 @@ if(WITH_OPENGL)
   endif()
   find_package(OpenGL REQUIRED)
   find_package(GLEW REQUIRED)
+  list(INSERT CMAKE_FRAMEWORK_PATH 0 /System/Library/Frameworks)
   find_package(GLUT REQUIRED)
   set(gl_LIBS ${gl_LIBS} ${OPENGL_LIBRARIES})
   set(perception_GL_INCLUDE_DIRS "mesh_filter/include" "depth_image_octomap_updater/include")
@@ -52,6 +52,25 @@ find_package(catkin REQUIRED COMPONENTS
 )
 
 find_package(Eigen3 REQUIRED)
+
+
+ if(CMAKE_C_COMPILER_ID MATCHES "Clang")
+   set(OpenMP_C "${CMAKE_C_COMPILER}")
+   set(OpenMP_C_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
+   set(OpenMP_C_LIB_NAMES "libomp" "libgomp" "libiomp5")
+   set(OpenMP_libomp_LIBRARY ${OpenMP_C_LIB_NAMES})
+   set(OpenMP_libgomp_LIBRARY ${OpenMP_C_LIB_NAMES})
+   set(OpenMP_libiomp5_LIBRARY ${OpenMP_C_LIB_NAMES})
+ endif()
+ if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+   set(OpenMP_CXX "${CMAKE_CXX_COMPILER}")
+   set(OpenMP_CXX_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
+   set(OpenMP_CXX_LIB_NAMES "libomp" "libgomp" "libiomp5")
+   set(OpenMP_libomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+   set(OpenMP_libgomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+   set(OpenMP_libiomp5_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+ endif()
+
 find_package(OpenMP REQUIRED)
 find_package(OpenCV)
 
diff --git a/moveit_ros/perception/mesh_filter/src/gl_renderer.cpp b/moveit_ros/perception/mesh_filter/src/gl_renderer.cpp
index 4f351b53e..41809a0e3 100644
--- a/moveit_ros/perception/mesh_filter/src/gl_renderer.cpp
+++ b/moveit_ros/perception/mesh_filter/src/gl_renderer.cpp
@@ -37,11 +37,13 @@
 #include <GL/glew.h>
 #ifdef __APPLE__
 #include <OpenGL/glu.h>
+#include <OpenGL/gl.h>
+#include <GLUT/glut.h>
 #else
 #include <GL/glu.h>
-#endif
 #include <GL/glut.h>
 #include <GL/freeglut.h>
+#endif
 #include <moveit/mesh_filter/gl_renderer.h>
 #include <sstream>
 #include <fstream>
@@ -400,8 +402,13 @@ void mesh_filter::GLRenderer::createGLContext()
     glutHideWindow();
 
     for (int i = 0; i < 10; ++i)
+    {
+#ifdef __APPLE__
+      glutCheckLoop();
+#else
       glutMainLoopEvent();
-
+#endif
+    }
     context_[thread_id] = std::pair<unsigned, GLuint>(1, window_id);
   }
   else
